# MCP Server Configuration

# Environment (dev, staging, prod)
environment: "dev"

# AWS Service Configurations
aws:
  # RDS Aurora PostgreSQL Configuration
  rds:
    auth:
      region: "us-west-2"
    host: "your-aurora-cluster.cluster-xxxxxxxxx.us-west-2.rds.amazonaws.com"
    port: 5432
    database: "mcp"
    username: "mcp_admin"
    password: "" # Leave empty when using IAM authentication
    use_iam_auth: true # IAM authentication is the default and recommended method
    token_expiration: 900 # 15 minutes in seconds
    max_open_conns: 25
    max_idle_conns: 5
    conn_max_lifetime: 5m
    enable_pooling: true
    min_pool_size: 2
    max_pool_size: 10
    connection_timeout: 30
  
  # ElastiCache Redis Configuration
  elasticache:
    auth:
      region: "us-west-2"
    primary_endpoint: "your-redis-cluster.xxxxxx.clustercfg.usw2.cache.amazonaws.com"
    port: 6379
    username: "mcp_cache_user"
    password: "" # Leave empty when using IAM authentication
    use_iam_auth: true # IAM authentication is the default and recommended method
    cluster_mode: true
    cluster_name: "mcp-cache"
    cluster_discovery: true
    use_tls: true
    insecure_skip_verify: false # Set to true only for testing
    max_retries: 3
    min_idle_connections: 2
    pool_size: 10
    dial_timeout: 5
    read_timeout: 3
    write_timeout: 3
    pool_timeout: 4
    token_expiration: 900 # 15 minutes in seconds
  
  # S3 Configuration
  s3:
    auth:
      region: "us-west-2"
    bucket: "mcp-contexts"
    use_iam_auth: true # IAM authentication is the default and recommended method
    # endpoint: "http://localhost:4566" # Uncomment for LocalStack or other S3-compatible services
    # force_path_style: true # Uncomment for LocalStack or other S3-compatible services
    server_side_encryption: "AES256"
    upload_part_size: 5242880 # 5MB
    download_part_size: 5242880 # 5MB
    concurrency: 5
    request_timeout: 30s

# Storage Configuration
storage:
  # Storage provider type: "local" or "s3"
  type: "s3"
  
  # Context Storage Configuration
  context_storage:
    # Provider: "database" or "s3"
    provider: "s3"
    s3_path_prefix: "contexts"

# API Server Configuration
api:
  listen_address: ":8080" # For development; use ":443" for production
  read_timeout: 30s
  write_timeout: 30s
  idle_timeout: 60s
  enable_cors: true
  
  # TLS Configuration (required for production)
  # tls_cert_file: "/certs/tls.crt"
  # tls_key_file: "/certs/tls.key"
  
  # Authentication
  auth:
    jwt_secret: "change-this-to-a-secure-secret"
    api_keys:
      admin: "change-this-to-a-secure-api-key"
      reader: "change-this-to-a-different-secure-api-key"
  
  # Rate Limiting
  rate_limit:
    enabled: true
    limit: 100
    period: 1m
    burst_factor: 3
  
  # Agent Webhook
  agent_webhook:
    enabled: true
    secret: "change-this-to-a-secure-webhook-secret"
  
  # DevOps Tool Webhooks
  webhooks:
    github:
      enabled: true
      path: "/github"
      secret: "change-this-to-a-secure-webhook-secret"
    
    harness:
      enabled: true
      path: "/harness"
      secret: "change-this-to-a-secure-webhook-secret"
    
    sonarqube:
      enabled: true
      path: "/sonarqube"
      secret: "change-this-to-a-secure-webhook-secret"
    
    artifactory:
      enabled: true
      path: "/artifactory"
      secret: "change-this-to-a-secure-webhook-secret"
    
    xray:
      enabled: true
      path: "/xray"
      secret: "change-this-to-a-secure-webhook-secret"

# Database Configuration
database:
  driver: "postgres"
  dsn: "postgres://user:password@localhost:5432/mcp?sslmode=disable" # Used only if not using AWS RDS with IAM auth
  max_open_conns: 25
  max_idle_conns: 5
  conn_max_lifetime: 30m

# Cache Configuration
cache:
  type: "redis"
  address: "localhost:6379" # Used only if not using AWS ElastiCache
  password: ""
  db: 0
  pool_size: 10
  min_idle_conns: 2
  dial_timeout: 5s
  read_timeout: 3s
  write_timeout: 3s

# Core Engine Configuration
engine:
  event_buffer_size: 10000
  concurrency_limit: 10
  event_timeout: 30s
  
  # Security Settings
  security:
    safe_mode: true  # Enable safety checks for all operations
    audit_logging: true  # Log all adapter operations for audit purposes
  
  # Context Management
  context:
    default_max_tokens: 100000
    default_ttl: 24h
    default_truncation_strategy: "oldest_first"
    enable_summarization: true
    enable_search: true

# DevOps Tool Adapters
adapters:
  github:
    api_token: "your-github-api-token"
    webhook_secret: "your-github-webhook-secret"
    # enterprise_url: "https://github.yourdomain.com/api/v3" # For GitHub Enterprise
    request_timeout: 30s
    retry_max: 3
    retry_delay: 1s
  
  harness:
    api_token: "your-harness-api-token"
    account_id: "your-harness-account-id"
    webhook_secret: "your-harness-webhook-secret"
    request_timeout: 30s
    retry_max: 3
    retry_delay: 1s
  
  sonarqube:
    base_url: "https://your-sonarqube-instance"
    api_token: "your-sonarqube-api-token"
    webhook_secret: "your-sonarqube-webhook-secret"
    request_timeout: 30s
    retry_max: 3
    retry_delay: 1s
  
  artifactory:
    base_url: "https://your-artifactory-instance"
    api_key: "your-artifactory-api-key"
    # username: "your-username" # Alternative to API key
    # password: "your-password" # Alternative to API key
    webhook_secret: "your-artifactory-webhook-secret"
    request_timeout: 30s
    retry_max: 3
    retry_delay: 1s
  
  xray:
    base_url: "https://your-xray-instance"
    api_key: "your-xray-api-key"
    # username: "your-username" # Alternative to API key
    # password: "your-password" # Alternative to API key
    webhook_secret: "your-xray-webhook-secret"
    request_timeout: 30s
    retry_max: 3
    retry_delay: 1s

# Monitoring Configuration
monitoring:
  prometheus:
    enabled: true
    path: "/metrics"
  
  logging:
    level: "info"
    format: "json"
    output: "stdout"
    file_path: ""
