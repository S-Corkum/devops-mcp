# MCP Server Configuration for Local Development
# 
# This configuration file is intended for use when running the MCP Server locally,
# outside of Docker. It uses "localhost" for database and cache connections instead
# of Docker container names.
#
# Usage:
# 1. Make sure PostgreSQL and Redis are running (e.g., via `docker-compose up -d postgres redis`)
# 2. Use this configuration with the server: `MCP_CONFIG_FILE=configs/config.local.yaml ./mcp-server`

# Storage Configuration
storage:
  # For local development, you can use "local" instead of "s3" to avoid S3 dependency
  # Or use "s3" with localstack for local S3-compatible storage
  type: "s3"
  
  # S3 Storage Configuration - for local development with localstack
  s3:
    region: "us-west-2"
    bucket: "mcp-contexts"
    # LocalStack typically runs on localhost:4566
    endpoint: "http://localhost:4566"
    force_path_style: true  # Required for LocalStack
    upload_part_size: 5242880  # 5MB
    download_part_size: 5242880  # 5MB
    concurrency: 5
    request_timeout: 30s
  
  # Context Storage Configuration
  context_storage:
    # Use "database" for simpler local development, or "s3" with localstack
    provider: "s3"
    s3_path_prefix: "contexts"

# API Server Configuration
api:
  listen_address: ":8080"
  read_timeout: 30s
  write_timeout: 30s
  idle_timeout: 90s
  base_path: "/api/v1"
  enable_cors: true
  log_requests: true
  
  # Authentication settings - use environment variables for secrets
  auth:
    api_keys_admin: "${API_KEY_ADMIN:-}"
    api_keys_test: "${API_KEY_TEST:-}"
    jwt_secret: "${JWT_SECRET:-}"
    jwt_expiration: 24h
  
  # API rate limiting
  rate_limit:
    enabled: true
    limit: 100
    burst: 150
    expiration: 1h
  
  # Webhook configuration
  webhooks:
    github:
      enabled: true
      secret: "${GITHUB_WEBHOOK_SECRET:-}"
      path: "/github"
    # Note: Harness, SonarQube, Artifactory, and JFrog Xray webhook support has been removed

# AWS Configuration for local development
aws:
  # For local development, use IAM auth but with fallback methods
  rds:
    auth:
      region: "${AWS_REGION:-us-west-2}"
    host: "localhost"
    port: 5432
    database: "mcp"
    username: "postgres"
    password: "${MCP_DATABASE_PASSWORD:-}" # For local development without IAM auth
    use_iam_auth: false # Disable for local development
    # Other settings inherited from default config
  
  # ElastiCache Config for local development
  elasticache:
    auth:
      region: "${AWS_REGION:-us-west-2}"
    primary_endpoint: "localhost"
    port: 6379
    username: ""
    password: "${MCP_CACHE_PASSWORD:-}"
    use_iam_auth: false # Disable for local development
    # Other settings inherited from default config
  
  # S3 Config for local development (using LocalStack)
  s3:
    auth:
      region: "${AWS_REGION:-us-west-2}"
    endpoint: "http://localhost:4566"
    bucket: "mcp-contexts"
    force_path_style: true # Required for LocalStack
    use_iam_auth: false # Disable for local development

# Database Configuration
database:
  driver: "postgres"
  host: "localhost"
  port: 5432
  username: "postgres"
  password: "${MCP_DATABASE_PASSWORD:-}" # Don't hardcode passwords
  database: "mcp"
  ssl_mode: "disable"
  # Use environment variable for connection string
  dsn: "postgres://postgres:${MCP_DATABASE_PASSWORD:-}@localhost:5432/mcp?sslmode=disable"
  max_open_conns: 25
  max_idle_conns: 5
  conn_max_lifetime: 5m

# Cache Configuration
cache:
  type: "redis"
  address: "localhost:6379"
  password: "${MCP_CACHE_PASSWORD:-}"
  database: 0
  use_iam_auth: false # No IAM auth for local Redis
  max_retries: 3
  dial_timeout: 5
  read_timeout: 3
  write_timeout: 3
  pool_size: 10
  min_idle_conns: 2
  pool_timeout: 4

# Core Engine Configuration
engine:
  event_buffer_size: 1000
  concurrency_limit: 5
  event_timeout: 30s
  
  # GitHub Configuration
  github:
    api_token: "${GITHUB_API_TOKEN}"
    webhook_secret: "${GITHUB_WEBHOOK_SECRET}"
    request_timeout: 10s
    rate_limit_per_hour: 5000
    max_retries: 3
    retry_delay: 1s
  
  # Note: Harness, SonarQube, Artifactory, and JFrog Xray adapter support has been removed

# Metrics Configuration
metrics:
  enabled: true
  type: "prometheus"
  endpoint: "prometheus:9090"
  push_gateway: ""
  push_interval: 10s