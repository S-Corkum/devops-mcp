version: '3.8'

services:
  redis-node-0:
    image: redis:7.0-alpine
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "7000:7000"
    volumes:
      - ./configs/redis-cluster/redis-0.conf:/usr/local/etc/redis/redis.conf
    networks:
      - mcp-network

  redis-node-1:
    image: redis:7.0-alpine
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "7001:7001"
    volumes:
      - ./configs/redis-cluster/redis-1.conf:/usr/local/etc/redis/redis.conf
    networks:
      - mcp-network

  redis-node-2:
    image: redis:7.0-alpine
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "7002:7002"
    volumes:
      - ./configs/redis-cluster/redis-2.conf:/usr/local/etc/redis/redis.conf
    networks:
      - mcp-network

  redis-node-3:
    image: redis:7.0-alpine
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "7003:7003"
    volumes:
      - ./configs/redis-cluster/redis-3.conf:/usr/local/etc/redis/redis.conf
    networks:
      - mcp-network

  redis-node-4:
    image: redis:7.0-alpine
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "7004:7004"
    volumes:
      - ./configs/redis-cluster/redis-4.conf:/usr/local/etc/redis/redis.conf
    networks:
      - mcp-network

  redis-node-5:
    image: redis:7.0-alpine
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "7005:7005"
    volumes:
      - ./configs/redis-cluster/redis-5.conf:/usr/local/etc/redis/redis.conf
    networks:
      - mcp-network

  redis-cluster-init:
    image: redis:7.0-alpine
    depends_on:
      - redis-node-0
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5
    command: >
      sh -c "sleep 5 && redis-cli --cluster create 
             redis-node-0:7000 redis-node-1:7001 redis-node-2:7002 
             redis-node-3:7003 redis-node-4:7004 redis-node-5:7005 
             --cluster-replicas 1 --cluster-yes"
    networks:
      - mcp-network

  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      # Cache configuration for Redis cluster
      - MCP_CACHE_TYPE=redis_cluster
      - MCP_CACHE_ADDRESSES=redis-node-0:7000,redis-node-1:7001,redis-node-2:7002,redis-node-3:7003,redis-node-4:7004,redis-node-5:7005
      # Database configuration
      - MCP_DATABASE_HOST=postgres
      - MCP_DATABASE_PORT=5432
      - MCP_DATABASE_USERNAME=postgres
      - MCP_DATABASE_PASSWORD=postgres
      - MCP_DATABASE_DATABASE=mcp
      # S3 Storage configuration
      - MCP_STORAGE_TYPE=s3
      - MCP_STORAGE_S3_REGION=us-west-2
      - MCP_STORAGE_S3_BUCKET=mcp-contexts
      - MCP_STORAGE_S3_ENDPOINT=http://localstack:4566
      - MCP_STORAGE_S3_FORCE_PATH_STYLE=true
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - MCP_STORAGE_CONTEXT_STORAGE_PROVIDER=s3
      - MCP_STORAGE_CONTEXT_STORAGE_S3_PATH_PREFIX=contexts
    depends_on:
      - postgres
      - redis-cluster-init
      - localstack
    networks:
      - mcp-network

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mcp
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: ["postgres"]
    networks:
      - mcp-network

  localstack:
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - DEFAULT_REGION=us-west-2
      - AWS_DEFAULT_REGION=us-west-2
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    volumes:
      - ./scripts/localstack:/docker-entrypoint-initaws.d
      - localstack-data:/tmp/localstack
    networks:
      - mcp-network

volumes:
  postgres-data:
  localstack-data:

networks:
  mcp-network:
    driver: bridge
